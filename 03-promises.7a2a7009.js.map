{"mappings":"YAAA,IAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,qBACnCE,UAAWH,SAASC,cAAc,oBAClCG,YAAaJ,SAASC,cAAc,uBAqBtC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAWtC,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACvBf,EAAKK,UAAUW,MAC5BC,YAAW,WACLP,EACFI,EAAQ,uBAAwCI,OAAfV,EAAS,QAAYU,OAANT,EAAM,OAEpDM,EAAK,sBAAqCG,OAAfV,EAAS,QAAYU,OAANT,EAAM,SAEnDA,MA5BPT,EAAKC,KAAKkB,iBAAiB,SAAUZ,G","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  valueDelay: document.querySelector('input[name=delay]'),\n  valueStep: document.querySelector('input[name=step]'),\n  valueAmount: document.querySelector('input[name=amount]'),\n};\n\nrefs.form.addEventListener('submit', createPromise);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const delay = refs.valueDelay.value;\n  const step = refs.valueStep.value;\n  const amount = refs.valueAmount.value;\n\n  createPromise(2, 1500)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    const step = refs.valueStep.value;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$ce04d3a99e08e73b$var$refs","form","document","querySelector","valueDelay","valueStep","valueAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","value","setTimeout","concat","addEventListener"],"version":3,"file":"03-promises.7a2a7009.js.map"}